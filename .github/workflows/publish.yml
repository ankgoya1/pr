name: Publish Artifact Workflow

on:
  workflow_dispatch:
    inputs:
      environment:
        type: environment
        description: Environment
      full:
        type: boolean
        description: Deploy ALL environments.
      cloud:
        type: boolean
        description: Cloud runner (default false)
  release:
    types: [created]
  pull_request:
    types: [closed]
env:
  workflowDepth: 1
  
jobs:
  Initialization:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.env.outputs.label }}
    steps:
      - name: Check for label
        id: env
        run: |
          echo "label=$(echo 'core_dev')" >> $env:GITHUB_OUTPUT
          echo $label

      - name: Set environment variable
        run: |
          echo "ISENVIRONMENT=${{ steps.env.outputs.label }}" >> $env:GITHUB_ENV

  Version:
    runs-on: [ ubuntu-latest ]
    needs: [ Initialization ]
    env:
      environment: ${{ needs.Initialization.outputs.environment }}
    steps:
    - name: get environment
      run: |   
        echo ${{ env.environment }}


  # publish:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.ref == 'refs/heads/main'
  #   steps:
  #     - name: Set Environment
  #       run: echo "::set-env name=DEPLOY_ENVIRONMENT::core_dev"

  #     - name: Debug
  #       run: |
  #         echo "Environment: $DEPLOY_ENVIRONMENT"
  
# name: Publish Artifact Workflow

# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         type: environment
#         description: Environment
#       full:
#         type: boolean
#         description: Deploy ALL environments
#       cloud:
#         type: boolean
#         description: Cloud runner (default false)
#   release:
#     types: [created]
#   pull_request:
#     branches: [ "main" ]
#     types:
#       - closed
    
#   workflow_call:
#     secrets:
#       token:
#         required: true
#       pass:
#         required: true
#     inputs:    
#       user:
#         description: Flag indicating whether the apps should be signed
#         type: string 
#       name: 
#         type: string 
#       mname:
#         type: string
        
        
# jobs:
      
#   publish:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Debug Event Payload
#         if: github.event_name == 'pull_request'
#         run: |
#           echo "Pull request event payload: $GITHUB_EVENT_PATH"
#           cat "$GITHUB_EVENT_PATH"
      
#       - name: Debug Inputs
#         if: github.event_name == 'pull_request'
#         run: |
#           echo "Environment input: ${{ inputs.environment }}"
#           echo "User input: ${{ inputs.user }}"
#           echo "Name input: ${{ inputs.name }}"
#           echo "Mname input: ${{ inputs.mname }}"

#       - name: Debug
#         run: |
#           echo "value is ${{ secrets.token }}"
#           echo "This pipeline has been trigger by ${{ inputs.user }} ${{ inputs.mname }} ${{ inputs.name }}"
#           echo "cloning repo....."
#           git clone https://ankgoya1:${{ secrets.pass }}@github.com/ankgoya1/demorepo.git
#           cd demorepo
#           ls -latr
#           echo ${{ inputs.environment }}



# name: Publish Artifact Workflow

# on:
#   workflow_dispatch:
#     inputs:
#       environment:
#         type: environment
#         description: Environment
#       full:
#         type: boolean
#         description: Deploy ALL environments.
#       cloud:
#         type: boolean
#         description: Cloud runner (default false)
#   release:
#     types: [created]
#   pull_request:
#     branches: [ "main" ]
#     types:
#       - closed
    
#   workflow_call:
#     secrets:
#       token:
#         required: true
#       pass:
#         required: true
#     inputs:    
#       user:
#         description: Flag indicating whether the apps should be signed
#         type: string 
#       name: 
#         type: string 
#       mname:
#         type: string
        
        
# jobs:
      
#   publish:
#     runs-on: ubuntu-latest
#     # if: github.event_name == 'release'
#     steps:
#       - name: Debug
#         run: |
#           echo "value is ${{ secrets.token }}"
#           echo "This pipeline has been trigger by ${{ inputs.user }} ${{ inputs.mname }} ${{ inputs.name }}"
#           echo "cloning repo....."
#             git clone https://ankgoya1:${{ secrets.pass }}@github.com/ankgoya1/demorepo.git
#           cd demorepo
#           ls -latr
#           echo ${{ inputs.environment }}

      # - name: Trigger Workflow in repoA
      #   # uses: peter-evans/repository-dispatch@v1
      #   with:
      #     token: ${{ secrets.GIT_PASS }}
      #     repository: ankgoya1/App1
      #     event-type: use-secret
      #     client-payload: '{"secretName": "GIT_PASS"}'
      #     run: | 
      #       echo "value is ${{ secrets.token }}"
      #       git clone https://ankgoya1:$token@github.com/ankgoya1/demorepo.git
      #       ls -latr
      #       cd demorepo
      #       ls -latr
            # echo ${{ inputs.environment }}
